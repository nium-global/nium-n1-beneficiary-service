openapi: 3.0.3
info:
  title: Payment Accounts
  description: |
    The schemas related to payment account details
  termsOfService: https://www.nium.com
  contact:
    name: Beneficiary Service
    url: https://www.nium.com
    email: core-dev@nium.com
  license:
    name: Copyright (c) 2024 NIUM
  version: 3.0.0
servers:
- url: https://gatewaysandbox.nium.com/beneficiary-service/
  description: QA server url
paths: {}
components:
  schemas:
    AUDSwiftAccountDetails:
      description: A swift payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[0-9A-Z]{1,50}$"
            type: string
            description: Account Number should not contain lowercase and special characters.
              Length should not be more than 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                - postalCode
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    AchRoutingCode1:
      type: object
      description: Length of ach_code should be 9 digits.
      allOf:
      - $ref: '#/components/schemas/RoutingCodeType'
      - required:
        - value
        type: object
        properties:
          order:
            $ref: '#/components/schemas/Order1'
          value:
            pattern: "^[0-9]{9}$"
            type: string
    AllowedCurrenciesForBE:
      discriminator:
        propertyName: payoutCurrency
        mapping:
          usd: '#/components/schemas/BEUSDPaymentMethods'
          aud: '#/components/schemas/BEAUDPaymentMethods'
          hkd: '#/components/schemas/BEHKDPaymentMethods'
          gbp: '#/components/schemas/BEGBPPaymentMethods'
          eur: '#/components/schemas/BEEURPaymentMethods'
          sgd: '#/components/schemas/BESGDPaymentMethods'
          nzd: '#/components/schemas/BENZDPaymentMethods'
          cad: '#/components/schemas/BECADPaymentMethods'
          jpy: '#/components/schemas/BEJPYPaymentMethods'
          chf: '#/components/schemas/BECHFPaymentMethods'
      oneOf:
      - $ref: '#/components/schemas/BECADPaymentMethods'
      - $ref: '#/components/schemas/BENZDPaymentMethods'
      - $ref: '#/components/schemas/BEJPYPaymentMethods'
      - $ref: '#/components/schemas/BEUSDPaymentMethods'
      - $ref: '#/components/schemas/BEHKDPaymentMethods'
      - $ref: '#/components/schemas/BEGBPPaymentMethods'
      - $ref: '#/components/schemas/BEEURPaymentMethods'
      - $ref: '#/components/schemas/BEAUDPaymentMethods'
      - $ref: '#/components/schemas/BESGDPaymentMethods'
      - $ref: '#/components/schemas/BECHFPaymentMethods'
    AllowedCurrenciesForCA:
      discriminator:
        propertyName: payoutCurrency
        mapping:
          usd: '#/components/schemas/CAUSDPaymentMethods'
          cad: '#/components/schemas/CACADPaymentMethods'
          aud: '#/components/schemas/CAAUDPaymentMethods'
          hkd: '#/components/schemas/CAHKDPaymentMethods'
          gbp: '#/components/schemas/CAGBPPaymentMethods'
          eur: '#/components/schemas/CAEURPaymentMethods'
          sgd: '#/components/schemas/CASGDPaymentMethods'
          nzd: '#/components/schemas/CANZDPaymentMethods'
          jpy: '#/components/schemas/CAJPYPaymentMethods'
          chf: '#/components/schemas/CACHFPaymentMethods'
      oneOf:
      - $ref: '#/components/schemas/CAJPYPaymentMethods'
      - $ref: '#/components/schemas/CAAUDPaymentMethods'
      - $ref: '#/components/schemas/CASGDPaymentMethods'
      - $ref: '#/components/schemas/CAUSDPaymentMethods'
      - $ref: '#/components/schemas/CAGBPPaymentMethods'
      - $ref: '#/components/schemas/CAHKDPaymentMethods'
      - $ref: '#/components/schemas/CANZDPaymentMethods'
      - $ref: '#/components/schemas/CACADPaymentMethods'
      - $ref: '#/components/schemas/CACHFPaymentMethods'
      - $ref: '#/components/schemas/CAEURPaymentMethods'
    AllowedCurrenciesForCH:
      discriminator:
        propertyName: payoutCurrency
        mapping:
          usd: '#/components/schemas/CHUSDPaymentMethods'
          aud: '#/components/schemas/CHAUDPaymentMethods'
          hkd: '#/components/schemas/CHHKDPaymentMethods'
          gbp: '#/components/schemas/CHGBPPaymentMethods'
          eur: '#/components/schemas/CHEURPaymentMethods'
          sgd: '#/components/schemas/CHSGDPaymentMethods'
          nzd: '#/components/schemas/CHNZDPaymentMethods'
          cad: '#/components/schemas/CHCADPaymentMethods'
          jpy: '#/components/schemas/CHJPYPaymentMethods'
          chf: '#/components/schemas/CHCHFPaymentMethods'
      oneOf:
      - $ref: '#/components/schemas/CHEURPaymentMethods'
      - $ref: '#/components/schemas/CHAUDPaymentMethods'
      - $ref: '#/components/schemas/CHSGDPaymentMethods'
      - $ref: '#/components/schemas/CHCADPaymentMethods'
      - $ref: '#/components/schemas/CHUSDPaymentMethods'
      - $ref: '#/components/schemas/CHCHFPaymentMethods'
      - $ref: '#/components/schemas/CHJPYPaymentMethods'
      - $ref: '#/components/schemas/CHHKDPaymentMethods'
      - $ref: '#/components/schemas/CHNZDPaymentMethods'
      - $ref: '#/components/schemas/CHGBPPaymentMethods'
    AllowedCurrenciesForDE:
      discriminator:
        propertyName: payoutCurrency
        mapping:
          usd: '#/components/schemas/DEUSDPaymentMethods'
          aud: '#/components/schemas/DEAUDPaymentMethods'
          hkd: '#/components/schemas/DEHKDPaymentMethods'
          gbp: '#/components/schemas/DEGBPPaymentMethods'
          eur: '#/components/schemas/DEEURPaymentMethods'
          sgd: '#/components/schemas/DESGDPaymentMethods'
          nzd: '#/components/schemas/DENZDPaymentMethods'
          cad: '#/components/schemas/DECADPaymentMethods'
          jpy: '#/components/schemas/DEJPYPaymentMethods'
          chf: '#/components/schemas/DECHFPaymentMethods'
      oneOf:
      - $ref: '#/components/schemas/DENZDPaymentMethods'
      - $ref: '#/components/schemas/DEUSDPaymentMethods'
      - $ref: '#/components/schemas/DEJPYPaymentMethods'
      - $ref: '#/components/schemas/DEAUDPaymentMethods'
      - $ref: '#/components/schemas/DESGDPaymentMethods'
      - $ref: '#/components/schemas/DECHFPaymentMethods'
      - $ref: '#/components/schemas/DEHKDPaymentMethods'
      - $ref: '#/components/schemas/DEEURPaymentMethods'
      - $ref: '#/components/schemas/DECADPaymentMethods'
      - $ref: '#/components/schemas/DEGBPPaymentMethods'
    AllowedCurrenciesForFR:
      discriminator:
        propertyName: payoutCurrency
        mapping:
          usd: '#/components/schemas/FRUSDPaymentMethods'
          aud: '#/components/schemas/FRAUDPaymentMethods'
          hkd: '#/components/schemas/FRHKDPaymentMethods'
          gbp: '#/components/schemas/FRGBPPaymentMethods'
          eur: '#/components/schemas/FREURPaymentMethods'
          sgd: '#/components/schemas/FRSGDPaymentMethods'
          nzd: '#/components/schemas/FRNZDPaymentMethods'
          cad: '#/components/schemas/FRCADPaymentMethods'
          jpy: '#/components/schemas/FRJPYPaymentMethods'
          chf: '#/components/schemas/FRCHFPaymentMethods'
      oneOf:
      - $ref: '#/components/schemas/FREURPaymentMethods'
      - $ref: '#/components/schemas/FRHKDPaymentMethods'
      - $ref: '#/components/schemas/FRCHFPaymentMethods'
      - $ref: '#/components/schemas/FRJPYPaymentMethods'
      - $ref: '#/components/schemas/FRSGDPaymentMethods'
      - $ref: '#/components/schemas/FRAUDPaymentMethods'
      - $ref: '#/components/schemas/FRCADPaymentMethods'
      - $ref: '#/components/schemas/FRUSDPaymentMethods'
      - $ref: '#/components/schemas/FRGBPPaymentMethods'
      - $ref: '#/components/schemas/FRNZDPaymentMethods'
    AllowedCurrenciesForGB:
      discriminator:
        propertyName: payoutCurrency
        mapping:
          usd: '#/components/schemas/GBUSDPaymentMethods'
          gbp: '#/components/schemas/GBGBPPaymentMethods'
          aud: '#/components/schemas/GBAUDPaymentMethods'
          hkd: '#/components/schemas/GBHKDPaymentMethods'
          eur: '#/components/schemas/GBEURPaymentMethods'
          sgd: '#/components/schemas/GBSGDPaymentMethods'
          nzd: '#/components/schemas/GBNZDPaymentMethods'
          cad: '#/components/schemas/GBCADPaymentMethods'
          jpy: '#/components/schemas/GBJPYPaymentMethods'
          chf: '#/components/schemas/GBCHFPaymentMethods'
      oneOf:
      - $ref: '#/components/schemas/GBEURPaymentMethods'
      - $ref: '#/components/schemas/GBCADPaymentMethods'
      - $ref: '#/components/schemas/GBNZDPaymentMethods'
      - $ref: '#/components/schemas/GBCHFPaymentMethods'
      - $ref: '#/components/schemas/GBHKDPaymentMethods'
      - $ref: '#/components/schemas/GBGBPPaymentMethods'
      - $ref: '#/components/schemas/GBAUDPaymentMethods'
      - $ref: '#/components/schemas/GBSGDPaymentMethods'
      - $ref: '#/components/schemas/GBUSDPaymentMethods'
      - $ref: '#/components/schemas/GBJPYPaymentMethods'
    AllowedCurrenciesForIT:
      discriminator:
        propertyName: payoutCurrency
        mapping:
          usd: '#/components/schemas/ITUSDPaymentMethods'
          aud: '#/components/schemas/ITAUDPaymentMethods'
          hkd: '#/components/schemas/ITHKDPaymentMethods'
          gbp: '#/components/schemas/ITGBPPaymentMethods'
          eur: '#/components/schemas/ITEURPaymentMethods'
          sgd: '#/components/schemas/ITSGDPaymentMethods'
          nzd: '#/components/schemas/ITNZDPaymentMethods'
          cad: '#/components/schemas/ITCADPaymentMethods'
          jpy: '#/components/schemas/ITJPYPaymentMethods'
          chf: '#/components/schemas/ITCHFPaymentMethods'
      oneOf:
      - $ref: '#/components/schemas/ITAUDPaymentMethods'
      - $ref: '#/components/schemas/ITSGDPaymentMethods'
      - $ref: '#/components/schemas/ITGBPPaymentMethods'
      - $ref: '#/components/schemas/ITUSDPaymentMethods'
      - $ref: '#/components/schemas/ITJPYPaymentMethods'
      - $ref: '#/components/schemas/ITHKDPaymentMethods'
      - $ref: '#/components/schemas/ITNZDPaymentMethods'
      - $ref: '#/components/schemas/ITCADPaymentMethods'
      - $ref: '#/components/schemas/ITCHFPaymentMethods'
      - $ref: '#/components/schemas/ITEURPaymentMethods'
    AllowedCurrenciesForJP:
      discriminator:
        propertyName: payoutCurrency
        mapping:
          usd: '#/components/schemas/JPUSDPaymentMethods'
          jpy: '#/components/schemas/JPJPYPaymentMethods'
          aud: '#/components/schemas/JPAUDPaymentMethods'
          hkd: '#/components/schemas/JPHKDPaymentMethods'
          gbp: '#/components/schemas/JPGBPPaymentMethods'
          eur: '#/components/schemas/JPEURPaymentMethods'
          sgd: '#/components/schemas/JPSGDPaymentMethods'
          nzd: '#/components/schemas/JPNZDPaymentMethods'
          cad: '#/components/schemas/JPCADPaymentMethods'
          chf: '#/components/schemas/JPCHFPaymentMethods'
      oneOf:
      - $ref: '#/components/schemas/JPCADPaymentMethods'
      - $ref: '#/components/schemas/JPAUDPaymentMethods'
      - $ref: '#/components/schemas/JPCHFPaymentMethods'
      - $ref: '#/components/schemas/JPSGDPaymentMethods'
      - $ref: '#/components/schemas/JPHKDPaymentMethods'
      - $ref: '#/components/schemas/JPJPYPaymentMethods'
      - $ref: '#/components/schemas/JPEURPaymentMethods'
      - $ref: '#/components/schemas/JPNZDPaymentMethods'
      - $ref: '#/components/schemas/JPGBPPaymentMethods'
      - $ref: '#/components/schemas/JPUSDPaymentMethods'
    AllowedCurrenciesForNL:
      discriminator:
        propertyName: payoutCurrency
        mapping:
          usd: '#/components/schemas/NLUSDPaymentMethods'
          aud: '#/components/schemas/NLAUDPaymentMethods'
          hkd: '#/components/schemas/NLHKDPaymentMethods'
          gbp: '#/components/schemas/NLGBPPaymentMethods'
          eur: '#/components/schemas/NLEURPaymentMethods'
          sgd: '#/components/schemas/NLSGDPaymentMethods'
          nzd: '#/components/schemas/NLNZDPaymentMethods'
          cad: '#/components/schemas/NLCADPaymentMethods'
          jpy: '#/components/schemas/NLJPYPaymentMethods'
          chf: '#/components/schemas/NLCHFPaymentMethods'
      oneOf:
      - $ref: '#/components/schemas/NLJPYPaymentMethods'
      - $ref: '#/components/schemas/NLAUDPaymentMethods'
      - $ref: '#/components/schemas/NLSGDPaymentMethods'
      - $ref: '#/components/schemas/NLGBPPaymentMethods'
      - $ref: '#/components/schemas/NLUSDPaymentMethods'
      - $ref: '#/components/schemas/NLNZDPaymentMethods'
      - $ref: '#/components/schemas/NLCADPaymentMethods'
      - $ref: '#/components/schemas/NLCHFPaymentMethods'
      - $ref: '#/components/schemas/NLEURPaymentMethods'
      - $ref: '#/components/schemas/NLHKDPaymentMethods'
    AllowedCurrenciesForSE:
      discriminator:
        propertyName: payoutCurrency
        mapping:
          usd: '#/components/schemas/SEUSDPaymentMethods'
          sek: '#/components/schemas/SESEKPaymentMethods'
          aud: '#/components/schemas/SEAUDPaymentMethods'
          hkd: '#/components/schemas/SEHKDPaymentMethods'
          gbp: '#/components/schemas/SEGBPPaymentMethods'
          eur: '#/components/schemas/SEEURPaymentMethods'
          sgd: '#/components/schemas/SESGDPaymentMethods'
          nzd: '#/components/schemas/SENZDPaymentMethods'
          cad: '#/components/schemas/SECADPaymentMethods'
          jpy: '#/components/schemas/SEJPYPaymentMethods'
          chf: '#/components/schemas/SECHFPaymentMethods'
      oneOf:
      - $ref: '#/components/schemas/SECADPaymentMethods'
      - $ref: '#/components/schemas/SEGBPPaymentMethods'
      - $ref: '#/components/schemas/SEUSDPaymentMethods'
      - $ref: '#/components/schemas/SESEKPaymentMethods'
      - $ref: '#/components/schemas/SEHKDPaymentMethods'
      - $ref: '#/components/schemas/SEEURPaymentMethods'
      - $ref: '#/components/schemas/SEJPYPaymentMethods'
      - $ref: '#/components/schemas/SENZDPaymentMethods'
      - $ref: '#/components/schemas/SECHFPaymentMethods'
      - $ref: '#/components/schemas/SEAUDPaymentMethods'
      - $ref: '#/components/schemas/SESGDPaymentMethods'
    AllowedCurrenciesForUS:
      discriminator:
        propertyName: payoutCurrency
        mapping:
          usd: '#/components/schemas/USUSDPaymentMethods'
          aud: '#/components/schemas/USAUDPaymentMethods'
          hkd: '#/components/schemas/USHKDPaymentMethods'
          gbp: '#/components/schemas/USGBPPaymentMethods'
          eur: '#/components/schemas/USEURPaymentMethods'
          sgd: '#/components/schemas/USSGDPaymentMethods'
          nzd: '#/components/schemas/USNZDPaymentMethods'
          cad: '#/components/schemas/USCADPaymentMethods'
          jpy: '#/components/schemas/USJPYPaymentMethods'
          chf: '#/components/schemas/USCHFPaymentMethods'
      oneOf:
      - $ref: '#/components/schemas/USCADPaymentMethods'
      - $ref: '#/components/schemas/USAUDPaymentMethods'
      - $ref: '#/components/schemas/USSGDPaymentMethods'
      - $ref: '#/components/schemas/USHKDPaymentMethods'
      - $ref: '#/components/schemas/USNZDPaymentMethods'
      - $ref: '#/components/schemas/USJPYPaymentMethods'
      - $ref: '#/components/schemas/USCHFPaymentMethods'
      - $ref: '#/components/schemas/USEURPaymentMethods'
      - $ref: '#/components/schemas/USUSDPaymentMethods'
      - $ref: '#/components/schemas/USGBPPaymentMethods'
    AutoSweepPaymentAccount:
      type: object
      properties:
        default:
          type: boolean
          default: false
        enable:
          type: boolean
          default: false
      description: An auto sweep attribute of a payment account.
    BEAUDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/AUDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/AUDSwiftAccountDetails'
    BECADPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CADSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CADSwiftAccountDetails'
    BECHFPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CHFSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CHFSwiftAccountDetails'
    BEEURPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/EURLocalAccountDetails'
          swift: '#/components/schemas/EURSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/EURLocalAccountDetails'
      - $ref: '#/components/schemas/EURSwiftAccountDetails'
    BEGBPPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/GBPSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/GBPSwiftAccountDetails'
    BEHKDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/HKDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/HKDSwiftAccountDetails'
    BEJPYPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/JPYSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/JPYSwiftAccountDetails'
    BENZDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/NZDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/NZDSwiftAccountDetails'
    BESGDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/SGDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SGDSwiftAccountDetails'
    BEUSDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/USDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/USDSwiftAccountDetails'
    BankAccountNumber:
      pattern: "^[A-Za-z0-9\\s-.():_/]{1,255}$"
      type: string
      description: A bank account number of a beneficiary.
    BankAccountType:
      type: string
      description: A possible values of a bank account type of a beneficiary.
      enum:
      - checking
      - current
      - maestra
      - other
      - saving
      - time_deposit
      x-enum-varnames:
      - checking
      - current
      - maestra
      - other
      - saving
      - time_deposit
    BankCode:
      pattern: "^[0-9]{0,15}$|^\\d{4}$|^[0-9]{3}$"
      type: string
      description: A bank account code of a beneficiary.
    BankName:
      pattern: "^.{0,255}$"
      type: string
      description: A bank account name of a beneficiary.
    BaseBranchNameRoutingCode:
      required:
      - value
      type: object
      properties:
        value:
          pattern: "^.{1,250}$"
          type: string
      description: Length of branch_name should not be more than 250 characters.
    BaseBranchRoutingCode:
      required:
      - value
      type: object
      properties:
        value:
          pattern: "^[0-9]{1,6}$"
          type: string
      description: Length of branch_code should not be more than 6 digits.
    BasePaymentAccount:
      required:
      - paymentMethod
      - payoutCountry
      - payoutCurrency
      type: object
      properties:
        alias:
          $ref: '#/components/schemas/PaymentAccountAlias'
        authenticationCode:
          $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AuthenticationCode
        autoSweep:
          $ref: '#/components/schemas/AutoSweepPaymentAccount'
        default:
          $ref: '#/components/schemas/DefaultPaymentAccount'
        paymentMethod:
          type: string
        payoutCountry:
          $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
        payoutCurrency:
          $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CurrencyCode
    BaseSwiftRoutingCode:
      required:
      - value
      type: object
      properties:
        value:
          pattern: "^[A-Za-z0-9]{8}$|^[A-Za-z0-9]{11}$"
          type: string
      description: swift should not contain special characters. Length of swift should
        be 8 or 11 characters.
    BranchNameRoutingCode1:
      allOf:
      - $ref: '#/components/schemas/BaseBranchNameRoutingCode'
      - $ref: '#/components/schemas/RoutingCodeType'
      - type: object
        properties:
          order:
            $ref: '#/components/schemas/Order1'
    BranchNameRoutingCode2:
      allOf:
      - $ref: '#/components/schemas/BaseBranchNameRoutingCode'
      - $ref: '#/components/schemas/RoutingCodeType'
      - type: object
        properties:
          order:
            $ref: '#/components/schemas/Order2'
    BranchRoutingCode1:
      allOf:
      - $ref: '#/components/schemas/BaseBranchRoutingCode'
      - $ref: '#/components/schemas/RoutingCodeType'
      - type: object
        properties:
          order:
            $ref: '#/components/schemas/Order1'
    BranchRoutingCode2:
      allOf:
      - $ref: '#/components/schemas/BaseBranchRoutingCode'
      - $ref: '#/components/schemas/RoutingCodeType'
      - type: object
        properties:
          order:
            $ref: '#/components/schemas/Order2'
    BsbRoutingCode1:
      type: object
      description: Length of bsb_code should be 6 digits.
      allOf:
      - $ref: '#/components/schemas/RoutingCodeType'
      - required:
        - value
        type: object
        properties:
          order:
            $ref: '#/components/schemas/Order1'
          value:
            pattern: "^[0-9]{6}$"
            type: string
    CAAUDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/AUDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/AUDSwiftAccountDetails'
    CACADPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/CADLocalAccountDetails'
          swift: '#/components/schemas/CADSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CADLocalAccountDetails'
      - $ref: '#/components/schemas/CADSwiftAccountDetails'
    CACHFPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CHFSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CHFSwiftAccountDetails'
    CADLocalAccountDetails:
      description: A local payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - bankCode
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[A-Za-z0-9]{1,50}$"
            type: string
            description: Account Number should contain only alphanumeric characters.
              Length should not be more than 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[0-9]{3}$"
            type: string
            description: Length of Bank code should be 3 digits.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - countryCode
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  transit_number: '#/components/schemas/TransitNumberRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/TransitNumberRoutingCode1'
    CADSwiftAccountDetails:
      description: A swift payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[A-Za-z0-9]{1,50}$"
            type: string
            description: Account Number should contain only alphanumeric characters.
              Length should not be more than 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    CAEURPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/EURSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/EURSwiftAccountDetails'
    CAGBPPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/GBPSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/GBPSwiftAccountDetails'
    CAHKDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/HKDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/HKDSwiftAccountDetails'
    CAJPYPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/JPYSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/JPYSwiftAccountDetails'
    CANZDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/NZDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/NZDSwiftAccountDetails'
    CASGDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/SGDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SGDSwiftAccountDetails'
    CAUSDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/USDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/USDSwiftAccountDetails'
    CHAUDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/AUDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/AUDSwiftAccountDetails'
    CHCADPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CADSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CADSwiftAccountDetails'
    CHCHFPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/CHFLocalAccountDetails'
          swift: '#/components/schemas/CHFSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CHFSwiftAccountDetails'
      - $ref: '#/components/schemas/CHFLocalAccountDetails'
    CHEURPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/EURLocalAccountDetails'
          swift: '#/components/schemas/EURSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/EURLocalAccountDetails'
      - $ref: '#/components/schemas/EURSwiftAccountDetails'
    CHFLocalAccountDetails:
      description: A local payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[A-Za-z0-9]{1,50}$"
            type: string
            description: Account Number should contain only alphanumeric characters.
              Length should not be more than 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    CHFSwiftAccountDetails:
      description: A swift payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[A-Za-z0-9]{1,50}$"
            type: string
            description: Account Number should contain only alphanumeric characters.
              Length should not be more than 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    CHGBPPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/GBPSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/GBPSwiftAccountDetails'
    CHHKDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/HKDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/HKDSwiftAccountDetails'
    CHJPYPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/JPYSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/JPYSwiftAccountDetails'
    CHNZDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/NZDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/NZDSwiftAccountDetails'
    CHSGDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/SGDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SGDSwiftAccountDetails'
    CHUSDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/USDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/USDSwiftAccountDetails'
    CardDetails:
      type: object
      description: A card payment account details of a beneficiary.
      discriminator:
        propertyName: informationType
        mapping:
          card_details: '#/components/schemas/CardInfoDetails'
          card_token: '#/components/schemas/CardTokenDetails'
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - informationType
        type: object
        properties:
          informationType:
            type: string
      - oneOf:
        - $ref: '#/components/schemas/CardInfoDetails'
        - $ref: '#/components/schemas/CardTokenDetails'
    CardExpiryDate:
      pattern: "^[0-9]{4}-[0-9]{2}$"
      type: string
      description: An expiry date of the card payment account. The date is of form
        YYYY-MM.
    CardInfoDetails:
      required:
      - expiryDate
      - informationType
      - number
      type: object
      properties:
        expiryDate:
          $ref: '#/components/schemas/CardExpiryDate'
        informationType:
          $ref: '#/components/schemas/CardInfoDetailsType'
        issuerName:
          $ref: '#/components/schemas/CardIssuerName'
        number:
          $ref: '#/components/schemas/CardNumber'
      description: A card payment account details of a beneficiary.
    CardInfoDetailsType:
      type: string
      description: A card payment account information type.
    CardIssuerName:
      pattern: "^[A-Za-z0-9\\s-.():_/]{1,255}$"
      type: string
      description: An issuer name of the card payment account.
    CardNumber:
      pattern: "^.{1,}$"
      type: string
      description: A card payment account number.
    CardToken:
      pattern: "^[A-Za-z0-9\\s-.():_/]{1,255}$"
      type: string
      description: A token of the card payment account.
    CardTokenDetails:
      required:
      - informationType
      - token
      type: object
      properties:
        informationType:
          $ref: '#/components/schemas/CardInfoDetailsType'
        token:
          $ref: '#/components/schemas/CardToken'
      description: A card payment account details of a beneficiary.
    CnapsRoutingCode1:
      type: object
      description: Length of cnaps should be 12 digits.
      allOf:
      - $ref: '#/components/schemas/RoutingCodeType'
      - required:
        - value
        type: object
        properties:
          order:
            $ref: '#/components/schemas/Order1'
          value:
            pattern: "^.{12}$"
            type: string
    DEAUDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/AUDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/AUDSwiftAccountDetails'
    DECADPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CADSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CADSwiftAccountDetails'
    DECHFPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CHFSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CHFSwiftAccountDetails'
    DEEURPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/EURLocalAccountDetails'
          swift: '#/components/schemas/EURSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/EURLocalAccountDetails'
      - $ref: '#/components/schemas/EURSwiftAccountDetails'
    DEGBPPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/GBPSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/GBPSwiftAccountDetails'
    DEHKDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/HKDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/HKDSwiftAccountDetails'
    DEJPYPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/JPYSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/JPYSwiftAccountDetails'
    DENZDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/NZDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/NZDSwiftAccountDetails'
    DESGDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/SGDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SGDSwiftAccountDetails'
    DEUSDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/USDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/USDSwiftAccountDetails'
    DefaultPaymentAccount:
      type: boolean
      description: An identifier for the default payment account.
      default: false
    EURLocalAccountDetails:
      description: A local payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[A-Z]{2}[0-9]{2}([0-9]|[A-Z])+([0-9A-Z]+){10,31}$"
            type: string
            description: Beneficiary account number should be valid IBAN.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - countryCode
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    EURSwiftAccountDetails:
      description: A swift payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[A-Za-z0-9]{1,50}$"
            type: string
            description: Account Number should contain only alphanumeric characters.
              Length should not be more than 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    FRAUDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/AUDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/AUDSwiftAccountDetails'
    FRCADPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CADSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CADSwiftAccountDetails'
    FRCHFPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CHFSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CHFSwiftAccountDetails'
    FREURPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/EURLocalAccountDetails'
          swift: '#/components/schemas/EURSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/EURLocalAccountDetails'
      - $ref: '#/components/schemas/EURSwiftAccountDetails'
    FRGBPPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/GBPSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/GBPSwiftAccountDetails'
    FRHKDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/HKDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/HKDSwiftAccountDetails'
    FRJPYPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/JPYSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/JPYSwiftAccountDetails'
    FRNZDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/NZDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/NZDSwiftAccountDetails'
    FRSGDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/SGDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SGDSwiftAccountDetails'
    FRUSDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/USDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/USDSwiftAccountDetails'
    GBAUDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/AUDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/AUDSwiftAccountDetails'
    GBCADPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CADSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CADSwiftAccountDetails'
    GBCHFPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CHFSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CHFSwiftAccountDetails'
    GBEURPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/EURLocalAccountDetails'
          swift: '#/components/schemas/EURSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/EURLocalAccountDetails'
      - $ref: '#/components/schemas/EURSwiftAccountDetails'
    GBGBPPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/GBPLocalAccountDetails'
          swift: '#/components/schemas/GBPSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/GBPSwiftAccountDetails'
      - $ref: '#/components/schemas/GBPLocalAccountDetails'
    GBHKDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/HKDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/HKDSwiftAccountDetails'
    GBJPYPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/JPYSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/JPYSwiftAccountDetails'
    GBNZDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/NZDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/NZDSwiftAccountDetails'
    GBPLocalAccountDetails:
      description: A local payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^\\d{8}$|^[A-Z]{2}[0-9]{2}([0-9]|[A-Z])+([0-9A-Z]+){10,31}$"
            type: string
            description: Account Number should be 8 digit account number or a valid
              IBAN.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - countryCode
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  sort_code: '#/components/schemas/SortRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SortRoutingCode1'
    GBPSwiftAccountDetails:
      description: A swift payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[0-9A-Z]{1,50}$"
            type: string
            description: Account Number should not contain lowercase and special characters.
              Length should not be more than 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    GBSGDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/SGDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SGDSwiftAccountDetails'
    GBUSDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/USDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/USDSwiftAccountDetails'
    HKDSwiftAccountDetails:
      description: A swift payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[A-Za-z0-9]{1,50}$"
            type: string
            description: Account Number should contain only alphanumeric characters.
              Length should not be more than 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    ITAUDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/AUDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/AUDSwiftAccountDetails'
    ITCADPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CADSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CADSwiftAccountDetails'
    ITCHFPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CHFSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CHFSwiftAccountDetails'
    ITEURPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/EURLocalAccountDetails'
          swift: '#/components/schemas/EURSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/EURLocalAccountDetails'
      - $ref: '#/components/schemas/EURSwiftAccountDetails'
    ITGBPPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/GBPSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/GBPSwiftAccountDetails'
    ITHKDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/HKDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/HKDSwiftAccountDetails'
    ITJPYPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/JPYSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/JPYSwiftAccountDetails'
    ITNZDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/NZDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/NZDSwiftAccountDetails'
    ITSGDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/SGDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SGDSwiftAccountDetails'
    ITUSDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/USDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/USDSwiftAccountDetails'
    IfscRoutingCode1:
      type: object
      description: ifsc should not contain special characters. Length of ifsc should
        be 11 characters.
      allOf:
      - $ref: '#/components/schemas/RoutingCodeType'
      - required:
        - value
        type: object
        properties:
          order:
            $ref: '#/components/schemas/Order1'
          value:
            pattern: "^[A-Za-z]{4}[A-Z0-9a-z]{7}$"
            type: string
    JPAUDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/AUDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/AUDSwiftAccountDetails'
    JPCADPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CADSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CADSwiftAccountDetails'
    JPCHFPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CHFSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CHFSwiftAccountDetails'
    JPEURPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/EURSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/EURSwiftAccountDetails'
    JPGBPPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/GBPSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/GBPSwiftAccountDetails'
    JPHKDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/HKDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/HKDSwiftAccountDetails'
    JPJPYPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/JPYLocalAccountDetails'
          swift: '#/components/schemas/JPYSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/JPYLocalAccountDetails'
      - $ref: '#/components/schemas/JPYSwiftAccountDetails'
    JPNZDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/NZDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/NZDSwiftAccountDetails'
    JPSGDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/SGDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SGDSwiftAccountDetails'
    JPUSDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/USDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/USDSwiftAccountDetails'
    JPYLocalAccountDetails:
      description: A local payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[0-9]{1,7}$"
            type: string
            description: Length of Account Number should not be more than 7 digits.
          accountType:
            type: string
            description: "Bank Account should be of the type : saving, checking, time_deposit\
              \ or other."
            enum:
            - checking
            - other
            - saving
            - time_deposit
            x-enum-varnames:
            - checking
            - other
            - saving
            - time_deposit
          bankCode:
            pattern: "^[0-9]{4}$"
            type: string
            description: Length of Bank code should be 4 digits.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    JPYSwiftAccountDetails:
      description: A swift payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[0-9A-Z]{1,50}$"
            type: string
            description: Account Number should not contain lowercase and special characters.
              Length should not be more than 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            $ref: '#/components/schemas/BankCode'
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - countryCode
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    LocationIdRoutingCode1:
      type: object
      description: Length of location_id should be 8 digits.
      allOf:
      - $ref: '#/components/schemas/RoutingCodeType'
      - required:
        - value
        type: object
        properties:
          order:
            $ref: '#/components/schemas/Order1'
          value:
            pattern: "^\\d{8}$"
            type: string
    NLAUDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/AUDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/AUDSwiftAccountDetails'
    NLCADPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CADSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CADSwiftAccountDetails'
    NLCHFPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CHFSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CHFSwiftAccountDetails'
    NLEURPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/EURLocalAccountDetails'
          swift: '#/components/schemas/EURSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/EURLocalAccountDetails'
      - $ref: '#/components/schemas/EURSwiftAccountDetails'
    NLGBPPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/GBPSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/GBPSwiftAccountDetails'
    NLHKDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/HKDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/HKDSwiftAccountDetails'
    NLJPYPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/JPYSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/JPYSwiftAccountDetails'
    NLNZDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/NZDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/NZDSwiftAccountDetails'
    NLSGDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/SGDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SGDSwiftAccountDetails'
    NLUSDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/USDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/USDSwiftAccountDetails'
    NZDSwiftAccountDetails:
      description: A swift payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[0-9A-Z]{1,50}$"
            type: string
            description: Account Number should not contain lowercase and special characters.
              Length should not be more than 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            $ref: '#/components/schemas/BankCode'
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - countryCode
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    Order1:
      type: integer
      readOnly: true
      default: 1
      x-internal: true
    Order2:
      type: integer
      readOnly: true
      default: 2
      x-internal: true
    OwnerIdentification:
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OwnerIdentificationType'
        value:
          $ref: '#/components/schemas/OwnerIdentificationValue'
      description: An owner's identification object.
    OwnerIdentificationType:
      pattern: "^[A-Za-z0-9\\s-.():_/]{1,255}$"
      type: string
      description: "Identification Type should be alphanumeric and must contain only\
        \ the following special characters - (- . ( ) : _ /). Length should be minimum\
        \ 1 and maximum 255 characters."
    OwnerIdentificationValue:
      pattern: "^[A-Za-z0-9\\s-.():_/]{1,255}$"
      type: string
      description: "Identification Value should be alphanumeric and must contain only\
        \ the following special characters - (- . ( ) : _ /). Length should be minimum\
        \ 1 and maximum 255 characters."
    PaymentAccountAlias:
      pattern: "^[a-zA-Z0-9\\s]{5,30}$"
      type: string
      description: A user-friendly name of a beneficiary's payment account.
    PaymentAccountDetails:
      discriminator:
        propertyName: payoutCountry
        mapping:
          us: '#/components/schemas/AllowedCurrenciesForUS'
          ca: '#/components/schemas/AllowedCurrenciesForCA'
          ch: '#/components/schemas/AllowedCurrenciesForCH'
          se: '#/components/schemas/AllowedCurrenciesForSE'
          gb: '#/components/schemas/AllowedCurrenciesForGB'
          jp: '#/components/schemas/AllowedCurrenciesForJP'
          be: '#/components/schemas/AllowedCurrenciesForBE'
          it: '#/components/schemas/AllowedCurrenciesForIT'
          de: '#/components/schemas/AllowedCurrenciesForDE'
          nl: '#/components/schemas/AllowedCurrenciesForNL'
          fr: '#/components/schemas/AllowedCurrenciesForFR'
      oneOf:
      - $ref: '#/components/schemas/AllowedCurrenciesForDE'
      - $ref: '#/components/schemas/AllowedCurrenciesForUS'
      - $ref: '#/components/schemas/AllowedCurrenciesForCA'
      - $ref: '#/components/schemas/AllowedCurrenciesForSE'
      - $ref: '#/components/schemas/AllowedCurrenciesForFR'
      - $ref: '#/components/schemas/AllowedCurrenciesForJP'
      - $ref: '#/components/schemas/AllowedCurrenciesForIT'
      - $ref: '#/components/schemas/AllowedCurrenciesForBE'
      - $ref: '#/components/schemas/AllowedCurrenciesForGB'
      - $ref: '#/components/schemas/AllowedCurrenciesForCH'
      - $ref: '#/components/schemas/AllowedCurrenciesForNL'
    PaymentAccountHashId:
      pattern: "^[0-9a-fA-F]{24}$|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      type: string
      description: A payment account identifier
    ProxyType:
      type: string
      description: A possible value of proxy payment account type.
      enum:
      - abn
      - army_id
      - corporate_registration_number
      - email
      - fps_id
      - id
      - mobile
      - nric
      - organisation_id
      - passport
      - random_key
      - uen
      - vpa
      x-enum-varnames:
      - abn
      - army_id
      - corporate_registration_number
      - email
      - fps_id
      - id
      - mobile
      - nric
      - organisation_id
      - passport
      - random_key
      - uen
      - vpa
    ProxyValue:
      pattern: "^[A-Za-z0-9\\s-.():_/]{1,255}$"
      type: string
      description: A proxy payment account value.
    RoutingCodeType:
      required:
      - type
      type: object
      properties:
        type:
          type: string
      description: A set of possible values for routing code type.
    SEAUDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/AUDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/AUDSwiftAccountDetails'
    SECADPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CADSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CADSwiftAccountDetails'
    SECHFPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CHFSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CHFSwiftAccountDetails'
    SEEURPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/EURLocalAccountDetails'
          swift: '#/components/schemas/EURSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/EURLocalAccountDetails'
      - $ref: '#/components/schemas/EURSwiftAccountDetails'
    SEGBPPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/GBPSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/GBPSwiftAccountDetails'
    SEHKDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/HKDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/HKDSwiftAccountDetails'
    SEJPYPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/JPYSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/JPYSwiftAccountDetails'
    SEKLocalAccountDetails:
      description: A local payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        type: object
        properties:
          accountNumber:
            pattern: "^SE[0-9]{2}[0-9]{3}[0-9]{17}$"
            type: string
            description: Account Number should be a valid Sweden IBAN.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[0-9]{4}$"
            type: string
            description: Length of Bank Code should be 4 digits.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 0
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    SENZDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/NZDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/NZDSwiftAccountDetails'
    SESEKPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/SEKLocalAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SEKLocalAccountDetails'
    SESGDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/SGDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SGDSwiftAccountDetails'
    SEUSDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/USDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/USDSwiftAccountDetails'
    SGDSwiftAccountDetails:
      description: A swift payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[A-Za-z0-9]{1,50}$"
            type: string
            description: Account Number should contain only alphanumeric characters.
              Length should not be more than 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    SortRoutingCode1:
      type: object
      description: Length of sort_code should be 6 digits.
      allOf:
      - $ref: '#/components/schemas/RoutingCodeType'
      - required:
        - value
        type: object
        properties:
          order:
            $ref: '#/components/schemas/Order1'
          value:
            pattern: "^[0-9]{6}$"
            type: string
    SwiftRoutingCode1:
      allOf:
      - $ref: '#/components/schemas/BaseSwiftRoutingCode'
      - $ref: '#/components/schemas/RoutingCodeType'
      - type: object
        properties:
          order:
            $ref: '#/components/schemas/Order1'
    SwiftRoutingCode2:
      allOf:
      - $ref: '#/components/schemas/BaseSwiftRoutingCode'
      - $ref: '#/components/schemas/RoutingCodeType'
      - type: object
        properties:
          order:
            $ref: '#/components/schemas/Order2'
    TransitNumberRoutingCode1:
      type: object
      description: Length of transit_number should be 5 digits.
      allOf:
      - $ref: '#/components/schemas/RoutingCodeType'
      - required:
        - value
        type: object
        properties:
          order:
            $ref: '#/components/schemas/Order1'
          value:
            pattern: "^[0-9]{5}$"
            type: string
    USAUDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/AUDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/AUDSwiftAccountDetails'
    USCADPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CADSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CADSwiftAccountDetails'
    USCHFPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/CHFSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/CHFSwiftAccountDetails'
    USDLocalAccountDetails:
      description: A local payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[0-9A-Z]{1,17}$"
            type: string
            description: Account Number should not contain lowercase and special characters.
              Length should not be more than 17 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                - postalCode
                - state
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 2
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  ach_code: '#/components/schemas/AchRoutingCode1'
                  swift: '#/components/schemas/SwiftRoutingCode2'
              oneOf:
              - $ref: '#/components/schemas/AchRoutingCode1'
              - $ref: '#/components/schemas/SwiftRoutingCode2'
    USDSwiftAccountDetails:
      description: A swift payment account details of a beneficiary
      allOf:
      - $ref: '#/components/schemas/BasePaymentAccount'
      - required:
        - accountNumber
        - owner
        - routingCodes
        type: object
        properties:
          accountNumber:
            pattern: "^[0-9A-Za-z]{1,50}$"
            type: string
            description: Account Number should contain only alphanumeric characters.
              Length should be minimum 1 and maximum 50 characters.
          accountType:
            type: string
            description: "Bank Account should be of the type : checking, saving, maestra\
              \ or current."
            enum:
            - checking
            - current
            - maestra
            - saving
            x-enum-varnames:
            - checking
            - current
            - maestra
            - saving
          bankCode:
            pattern: "^[A-Za-z0-9\\s-.():_/]{1,15}$"
            type: string
            description: Length of Bank Code should not be more than 15 characters.
          owner:
            required:
            - address
            type: object
            properties:
              address:
                required:
                - city
                - countryCode
                - line1
                type: object
                properties:
                  city:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressCity
                  countryCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/CountryCode
                  line1:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  line2:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Line
                  postalCode:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/PostalCode
                  state:
                    $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/AddressState
                description: An address details.
              identification:
                required:
                - type
                - value
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OwnerIdentificationType'
                  value:
                    pattern: "^[A-Za-z0-9 .():_/-]{1,255}$"
                    type: string
                    description: "Identification Value should be alphanumeric and\
                      \ must contain only the following special characters - (- .\
                      \ ( ) : _ /). Length should be minimum 1 and maximum 255 characters."
                description: An owner's identification details.
              name:
                $ref: https://raw.githubusercontent.com/nium-global/nium-n1-beneficiary-service/dev/core.yaml#/components/schemas/Name
            description: A payment account owner PII information.
          routingCodes:
            maxItems: 1
            minItems: 1
            type: array
            items:
              discriminator:
                propertyName: type
                mapping:
                  swift: '#/components/schemas/SwiftRoutingCode1'
              oneOf:
              - $ref: '#/components/schemas/SwiftRoutingCode1'
    USEURPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/EURSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/EURSwiftAccountDetails'
    USGBPPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/GBPSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/GBPSwiftAccountDetails'
    USHKDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/HKDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/HKDSwiftAccountDetails'
    USJPYPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/JPYSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/JPYSwiftAccountDetails'
    USNZDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/NZDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/NZDSwiftAccountDetails'
    USSGDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          swift: '#/components/schemas/SGDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/SGDSwiftAccountDetails'
    USUSDPaymentMethods:
      discriminator:
        propertyName: paymentMethod
        mapping:
          local: '#/components/schemas/USDLocalAccountDetails'
          swift: '#/components/schemas/USDSwiftAccountDetails'
      oneOf:
      - $ref: '#/components/schemas/USDSwiftAccountDetails'
      - $ref: '#/components/schemas/USDLocalAccountDetails'
    WalletHandleType:
      pattern: "^[A-Za-z0-9\\s-.():_/]{1,255}$"
      type: string
      description: A wallet handle type.
    WalletRoutingCode1:
      type: object
      description: A wallet routing code value
      allOf:
      - $ref: '#/components/schemas/RoutingCodeType'
      - required:
        - value
        type: object
        properties:
          order:
            $ref: '#/components/schemas/Order2'
          value:
            maxLength: 255
            type: string
    WalletType:
      pattern: "^[A-Za-z0-9\\s-.():_/]{1,255}$"
      type: string
      description: A wallet type.
