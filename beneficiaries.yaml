openapi: 3.0.3
info:
  title: Beneficiaries
  description: |
    The schemas related to beneficiary details
  termsOfService: https://www.nium.com
  contact:
    name: Beneficiary Service
    url: https://www.nium.com
    email: core-dev@nium.com
  license:
    name: Copyright (c) 2024 NIUM
  version: 3.0.0
servers:
  - url: https://gatewaysandbox.nium.com/beneficiary-service/
    description: QA server url
paths: {}
components:
  schemas:
    BeneficiaryHashId:
      type: string
      pattern: "^[0-9a-fA-F]{24}$|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      description: A beneficiary identifier
    EntityType:
      type: string
      description: A beneficiary entity type.
      enum:
        - individual
        - corporate
      x-enum-varnames:
        - individual
        - corporate
    BeneficiaryBaseDetails:
      type: object
      description: Base details for a beneficiary entity.
      properties:
        authenticationCode:
          $ref: './core.yaml#/components/schemas/AuthenticationCode'
        entityType:
          type: string
        name:
          $ref: './core.yaml#/components/schemas/Name'
        email:
          $ref: '#/components/schemas/BeneficiaryEmail'
        contactNumber:
          $ref: '#/components/schemas/BeneficiaryContactNumber'
        communicationPreference:
          $ref: '#/components/schemas/BeneficiaryCommunicationPreference'
        remitterBeneficiaryRelationship:
          $ref: '#/components/schemas/RemitterBeneficiaryRelationship'
      required:
        - entityType
        - email
        - name
    BeneficiaryEntityDetails:
      type: object
      description: A beneficiary entity details.
      discriminator:
        propertyName: entityType
        mapping:
          individual: '#/components/schemas/IndividualEntityDetails'
          corporate: '#/components/schemas/BusinessEntityDetails'
      oneOf:
        - $ref: '#/components/schemas/IndividualEntityDetails'
        - $ref: '#/components/schemas/BusinessEntityDetails'
    BusinessEntityDetails:
      allOf:
        - $ref: '#/components/schemas/BeneficiaryBaseDetails'
        - type: object
          description: A business beneficiary entity details.
          properties:
            businessRegistrationNumber:
              $ref: '#/components/schemas/BusinessRegistrationNumber'
            establishmentDate:
              type: string
              format: date
            businessType:
              $ref: '#/components/schemas/BusinessType'
          required:
            - businessRegistrationNumber
            - businessType
    BusinessRegistrationNumber:
      type: string
      description: A beneficiary's business registration number.
    BusinessType:
      type: string
      description: This field accepts the type of the business, when the beneficiary is a business.
      example: partnership
      enum:
        - sole_proprietorship
        - partnership
        - privately_owned_company
        - publicly_owned_company
        - government_owned_entity
        - financial_institution
    IndividualEntityDetails:
      allOf:
        - $ref: '#/components/schemas/BeneficiaryBaseDetails'
        - type: object
          description: An individual beneficiary entity details.
          properties:
            dateOfBirth:
              type: string
              format: date
    BeneficiaryEmail:
      required:
        - value
      type: object
      properties:
        value:
          $ref: ./core.yaml#/components/schemas/Email
        verified:
          type: boolean
          default: false
      description: A beneficiary's contact email details.
    BeneficiaryContactNumber:
      required:
        - number
      type: object
      properties:
        number:
          $ref: ./core.yaml#/components/schemas/ContactNumber
        verified:
          type: boolean
          default: false
      description: A beneficiary's contact number details.
    BeneficiaryCommunicationPreference:
      type: string
      description: A preferred communication channel of a beneficiary.
      enum:
        - phone
        - email
      x-enum-varnames:
        - phone
        - email
    BeneficiaryChannel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BeneficiaryChannelType'
        location:
          $ref: ./core.yaml#/components/schemas/CountryCode
        ipAddress:
          $ref: ./core.yaml#/components/schemas/IpAddress
      description: A beneficiary's channel object
    BeneficiaryChannelType:
      type: string
      description: A possible values of a beneficiary's channel type.
      enum:
        - hosted
        - api
      x-enum-varnames:
        - hosted
        - api
    RemitterBeneficiaryRelationship:
      pattern: "^.[A-Za-z0-9 -.]{1,255}$"
      type: string
      description: A relationship between a remitter and beneficiary in the context
        of the transaction.
